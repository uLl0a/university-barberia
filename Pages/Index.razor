@page "/"
@layout AutorizationLayout
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager

<section class="vh-100" style="background-color: #073763;">
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col col-xl-10">
        <div class="card" style="border-radius: 1rem;">
          <div class="row g-0">
            <div class="col-md-6 col-lg-5 d-none d-md-block">
              <img
                src="/img/th-3907347439.jpg"
                alt="login form"
                class="img-fluid" style="border-radius: 1rem 0 0 1rem;"
              />
            </div>
            <div class="col-md-6 col-lg-7 d-flex align-items-center">
              <div class="card-body p-4 p-lg-5 text-black">

                <form>
                  <div class="form-outline mb-4">
                    <input  maxlength="128" @bind=@username type="text" id="form2Example17" class="form-control form-control-lg" />
                    <label class="form-label" for="form2Example17">Usuario</label>
                  </div>

                  <div class="form-outline mb-4">
                    <input  maxlength="128" @bind=@password type="password" id="form2Example27" class="form-control form-control-lg" />
                    <label class="form-label" for="form2Example27">Contraseña</label>
                  </div>

                  <div class="pt-1 mb-4">
                    <button @onclick="IsLoggedSuccessfull" class="btn btn-success btn-lg btn-block" type="button">Iniciar sesión</button>
                  </div>
                </form>
                    <a style="color:red">@message</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>


@code{
    string username;
    string password;
    string message;
    private void IsLoggedSuccessfull()
    {
        if(username == "" || password == ""){
            message = "Usuario o clave incorrecta porfavor intente de nuevo";
            return;
        }

        var data = utils.TestIntentToLogIn(username, password);
        if (data != null)
        {
            ProtectedSessionStore.SetAsync("UsuarioID", data["empleado"].ToString());
            ProtectedSessionStore.SetAsync("UsuarioUsername", data["usuario"].ToString());
        }
        else
        {
            message = "Usuario o clave incorrecta porfavor intente de nuevo";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var user = (await ProtectedSessionStore.GetAsync<string>("UsuarioID")).Value;

        if (user != null)
        {
            NavigationManager.NavigateTo("/Dashboard");
        }

    }
}

